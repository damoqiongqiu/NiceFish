{"version":3,"file":"main.8b97a0f3ae1e3d9d.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.module.ts","./src/app/blog/user/retrieve-pwd/retrieve-pwd.component.ts","./src/app/blog/user/retrieve-pwd/retrieve-pwd.component.html","./src/app/blog/user/retrieve-pwd/retrieve-pwd.service.ts","./src/app/blog/user/sign-in/sign-in.component.ts","./src/app/blog/user/sign-in/sign-in.component.html","./src/app/blog/user/sign-in/sign-in.service.ts","./src/app/blog/user/sign-up/equal-validator.directive.ts","./src/app/blog/user/sign-up/sign-up.component.ts","./src/app/blog/user/sign-up/sign-up.component.html","./src/app/blog/user/sign-up/sign-up.service.ts","./src/app/blog/user/user-info/user-info.component.ts","./src/app/blog/user/user-info/user-info.component.html","./src/app/blog/user/user-profile/user-profile.component.ts","./src/app/blog/user/user-profile/user-profile.component.html","./src/app/index.ts","./src/app/manage/permission/user-mng.service.ts","./src/app/shared/NiceFishHttpInterceptor.ts","./src/app/shared/animations/fade-in.ts","./src/app/shared/auth-guard.ts","./src/app/shared/block-spinner/block-service.service.ts","./src/app/shared/block-spinner/block-spinner.component.ts","./src/app/shared/block-spinner/block-spinner.component.html","./src/app/shared/captcha/captcha.component.ts","./src/app/shared/captcha/captcha.component.html","./src/app/shared/pipes/boolean-pipe.ts","./src/app/shared/pipes/right-pad-string.pipe.ts","./src/app/shared/pipes/sanitize-html-pipe.ts","./src/app/shared/pipes/trim-string.pipe.ts","./src/app/shared/shared.module.ts","./src/environments/data-url-config/mock-data-url.ts","./src/environments/environment.dev.mock.ts","./src/main.ts"],"sourcesContent":["import { Component, ElementRef, Renderer2 } from \"@angular/core\";\r\nimport { ActivatedRoute, Router, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot } from \"@angular/router\";\r\nimport { TranslateService } from \"@ngx-translate/core\";\r\nimport { SignInService } from \"./blog/user/sign-in/sign-in.service\";\r\nimport { SignUpService } from \"./blog/user/sign-up/sign-up.service\";\r\nimport { merge } from \"rxjs\"\r\nimport { MessageService } from \"primeng/api\";\r\n\r\n@Component({\r\n\tselector: \"root\",\r\n\ttemplateUrl: \"./app.component.html\",\r\n\tstyleUrls: [\"./app.component.scss\"]\r\n})\r\nexport class AppComponent {\r\n\tpublic showToggleMenu = false;\r\n\tpublic currentUser: any;\r\n\tprivate globalClickCallbackFn: Function;\r\n\r\n\tconstructor(\r\n\t\tpublic elementRef: ElementRef,\r\n\t\tpublic renderer: Renderer2,\r\n\t\tpublic router: Router,\r\n\t\tpublic activatedRoute: ActivatedRoute,\r\n\t\tpublic translate: TranslateService,\r\n\t\tpublic signInService: SignInService,\r\n\t\tpublic signUpService: SignUpService,\r\n\t\tprivate messageService: MessageService\r\n\t) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.globalClickCallbackFn = this.renderer.listen(this.elementRef.nativeElement, \"click\", (event: any) => {\r\n\t\t\tconsole.log(\"全局监听点击事件>\" + event);\r\n\t\t});\r\n\r\n\t\tthis.currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\r\n\r\n\t\tmerge(this.signInService.currentUser, this.signUpService.currentUser)\r\n\t\t\t.subscribe(\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tthis.currentUser = data;\r\n\t\t\t\t\tlet activatedRouteSnapshot: ActivatedRouteSnapshot = this.activatedRoute.snapshot;\r\n\t\t\t\t\tlet routerState: RouterState = this.router.routerState;\r\n\t\t\t\t\tlet routerStateSnapshot: RouterStateSnapshot = routerState.snapshot;\r\n\r\n\t\t\t\t\tconsole.log(activatedRouteSnapshot);\r\n\t\t\t\t\tconsole.log(routerState);\r\n\t\t\t\t\tconsole.log(routerStateSnapshot);\r\n\r\n\t\t\t\t\t// 如果是从/login这个URL进行的登录，跳转到首页，否则什么都不做\r\n\t\t\t\t\tif (routerStateSnapshot.url.indexOf(\"/login\") != -1) {\r\n\t\t\t\t\t\tthis.router.navigateByUrl(\"/home\");\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror => console.error(error)\r\n\t\t\t);\r\n\r\n\t\t// ngx-translate国际化服务相关的配置\r\n\t\tthis.translate.addLangs([\"zh\", \"en\"]);\r\n\t\tthis.translate.setDefaultLang(\"zh\");\r\n\t\tconst browserLang = this.translate.getBrowserLang();\r\n\t\tconsole.log(\"获取到浏览器的语言>\" + browserLang);\r\n\t\tthis.translate.use(browserLang.match(/zh|en/) ? browserLang : \"zh\");\r\n\t}\r\n\r\n\tngOnDestroy() {\r\n\t\tif (this.globalClickCallbackFn) {\r\n\t\t\tthis.globalClickCallbackFn();\r\n\t\t}\r\n\t}\r\n\r\n\tonMenuToggle() {\r\n\t\tthis.showToggleMenu = !this.showToggleMenu;\r\n\t}\r\n\r\n\tpublic doLogout(): void {\r\n\t\tthis.showToggleMenu = false;\r\n\t\tthis.signInService.signOut();\r\n\t\tthis.router.navigateByUrl(\"\");\r\n\t}\r\n}\r\n","<!-- 顶部导航 -->\r\n<div class=\"navbar navbar-fixed-top main-nav\" role=\"navigation\">\r\n    <div class=\"container\">\r\n\r\n        <!-- 全局消息 -->\r\n        <p-toast position=\"top-center\"></p-toast>\r\n\r\n        <!-- 全局弹出确认 -->\r\n        <p-confirmDialog #cd [style]=\"{width:'50vw'}\">\r\n            <ng-template pTemplate=\"footer\">\r\n                <button type=\"button\" pButton icon=\"pi pi-check\" label=\"确定\" class=\"btn btn-danger\"\r\n                    (click)=\"cd.accept()\"></button>\r\n                <button type=\"button\" pButton icon=\"pi pi-times\" label=\"取消\" class=\"btn btn-success\"\r\n                    (click)=\"cd.reject()\"></button>\r\n            </ng-template>\r\n        </p-confirmDialog>\r\n\r\n        <!-- 全局遮罩 -->\r\n        <block-spinner></block-spinner>\r\n\r\n        <div class=\"navbar-header\">\r\n            <button class=\"navbar-toggle\" type=\"button\" data-toggle=\"collapse\" data-target=\".navbar-responsive-collapse\"\r\n                (click)=\"onMenuToggle()\">\r\n                <span class=\"sr-only\">Toggle Navigation</span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n                <span class=\"icon-bar\"></span>\r\n            </button>\r\n            <a routerLink=\"posts\" class=\"navbar-brand-my\">\r\n                <img src=\"assets/imgs/nice-fish.png\" width=\"45\">\r\n            </a>\r\n        </div>\r\n        <div class=\"navbar-collapse collapse\" [ngClass]=\"{'in':showToggleMenu===true}\">\r\n            <ul class=\"nav navbar-nav\" (click)=\"onMenuToggle()\">\r\n                <li routerLinkActive=\"active\">\r\n                    <a routerLink=\"posts\">{{'app.read' | translate}}</a>\r\n                </li>\r\n                <li routerLinkActive=\"active\">\r\n                    <a routerLink=\"post/write\">{{'app.write' | translate}}</a>\r\n                </li>\r\n            </ul>\r\n            <ul *ngIf=\"!currentUser?.userName\" class=\"nav navbar-nav navbar-right\" (click)=\"onMenuToggle()\">\r\n                <li routerLinkActive=\"active\">\r\n                    <a href=\"https://gitee.com/mumu-osc/NiceFish\" target=\"_blank\"><i class=\"fa fa-github\"></i></a>\r\n                </li>\r\n                <li routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\">\r\n                    <a routerLink=\"login\"><i class=\"fa fa-sign-in\"></i></a>\r\n                </li>\r\n                <li routerLinkActive=\"active\">\r\n                    <a routerLink=\"register\"><i class=\"fa fa-user-plus\"></i></a>\r\n                </li>\r\n            </ul>\r\n            <ul *ngIf=\"currentUser?.userName\" class=\"nav navbar-nav navbar-right\" (click)=\"onMenuToggle()\">\r\n                <li routerLinkActive=\"active\">\r\n                    <a href=\"https://gitee.com/mumu-osc/NiceFish\" target=\"_blank\"><i class=\"fa fa-github\"></i></a>\r\n                </li>\r\n                <li routerLinkActive=\"active\">\r\n                    <a routerLink=\"home\"><i class=\"fa fa-user\"></i></a>\r\n                </li>\r\n                <li routerLinkActive=\"active\">\r\n                    <a routerLink=\"manage\"><i class=\"fa fa-cog\"></i></a>\r\n                </li>\r\n                <li routerLinkActive=\"active\">\r\n                    <a href=\"javascript:void(0);\" (click)=\"doLogout()\"><i class=\"fa fa-sign-out\"></i></a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- 主体内容区域 -->\r\n<div class=\"container main-container\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n<!-- 底部区域 -->\r\n<div class=\"footer bs-footer\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <p>\r\n                    Powered by <a href=\"http://git.oschina.net/mumu-osc/NiceFish\" target=\"_blank\">NiceFish</a>\r\n                </p>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n                <a href='https://gitee.com/mumu-osc/NiceFish/stargazers' target=\"_blank\">\r\n                    <img src='https://gitee.com/mumu-osc/NiceFish/badge/star.svg?theme=dark' alt='star' />\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { HttpClientModule, HttpClient, HTTP_INTERCEPTORS } from \"@angular/common/http\";\r\nimport { TranslateModule, TranslateLoader } from \"@ngx-translate/core\";\r\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\r\nimport { TranslateService, TranslateStore } from \"@ngx-translate/core\";\r\nimport { ToastModule } from \"primeng/toast\";\r\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\r\nimport { MessageService } from \"primeng/api\";\r\nimport { SharedModule } from \"./shared/shared.module\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { SignInService } from \"./blog/user/sign-in/sign-in.service\";\r\nimport { RetrievePwdComponent } from \"./blog/user/retrieve-pwd/retrieve-pwd.component\";\r\nimport { SignUpComponent } from \"./blog/user/sign-up/sign-up.component\";\r\nimport { SignUpService } from \"./blog/user/sign-up/sign-up.service\";\r\nimport { RetrievePwdService } from \"./blog/user/retrieve-pwd/retrieve-pwd.service\";\r\nimport { EqualValidator } from \"./blog/user/sign-up/equal-validator.directive\";\r\nimport { AppRoutingModule } from './app.routing.module';\r\nimport { ConfirmationService } from \"primeng/api\";\r\nimport { AuthGuard } from \"./shared/auth-guard\";\r\nimport { BlockService } from \"./shared/block-spinner/block-service.service\";\r\nimport { NiceFishHttpInterceptor } from \"./shared/NiceFishHttpInterceptor\";\r\n\r\n/**\r\n * Angular Ivy 要求导出一个模块\r\n * @see https://github.com/ngx-translate/core\r\n * @param http \r\n * @returns \r\n */\r\nexport function createTranslateLoader(http: HttpClient) {\r\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    RetrievePwdComponent,\r\n    SignUpComponent,\r\n    EqualValidator\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: \"NiceFish\" }),\r\n    BrowserAnimationsModule,\r\n    RouterModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    TranslateModule.forRoot({\r\n      defaultLanguage: 'en',\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: (createTranslateLoader),\r\n        deps: [HttpClient]\r\n      }\r\n    }),\r\n    SharedModule,\r\n    ToastModule,\r\n    ConfirmDialogModule,\r\n  ],\r\n  providers: [\r\n    TranslateService,\r\n    TranslateStore,\r\n    SignInService,\r\n    SignUpService,\r\n    RetrievePwdService,\r\n    MessageService,\r\n    ConfirmationService,\r\n    BlockService,\r\n    { provide: HTTP_INTERCEPTORS, useClass: NiceFishHttpInterceptor, multi: true },\r\n    AuthGuard\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SignInComponent } from './blog/user/sign-in/sign-in.component';\r\nimport { RetrievePwdComponent } from './blog/user/retrieve-pwd/retrieve-pwd.component';\r\nimport { SignUpComponent } from './blog/user/sign-up/sign-up.component';\r\n\r\nconst routes: Routes =[\r\n\t{\r\n\t\tpath: \"\",\r\n\t\tredirectTo: \"posts\",\r\n\t\tpathMatch: \"full\"\r\n\t},\r\n\t{\r\n\t\tpath: \"home\",\r\n\t\tloadChildren: () => import(\"./blog/home/home.module\").then(m => m.HomeModule)\r\n\t},\r\n\t{\r\n\t\tpath: \"posts\",\r\n\t\tloadChildren: () => import(\"./blog/home/home.module\").then(m => m.HomeModule)\r\n\t},\r\n\t{\r\n\t\tpath: \"post\",\r\n\t\tloadChildren: () => import(\"./blog/post/post.module\").then(m => m.PostModule)\r\n\t},\r\n\t{\r\n\t\tpath: \"login\",\r\n\t\tcomponent: SignInComponent\r\n\t},\r\n\t{\r\n\t\tpath: \"retrievepwd\",\r\n\t\tcomponent: RetrievePwdComponent\r\n\t},\r\n\t{\r\n\t\tpath: \"register\",\r\n\t\tcomponent: SignUpComponent\r\n\t},\r\n\t{\r\n\t\tpath: \"user\",\r\n\t\tloadChildren: () => import(\"./blog/user/user.module\").then(m => m.UserModule)\r\n\t},\r\n\t{\r\n\t\tpath: \"manage\",\r\n\t\tloadChildren: () => import(\"./manage/manage.module\").then(m => m.ManageModule)\r\n\t},\r\n\t{\r\n\t\tpath: \"**\",\r\n\t\tloadChildren: () => import(\"./blog/home/home.module\").then(m => m.HomeModule)\r\n\t}\r\n];\r\n\r\n@NgModule({\r\n\timports: [RouterModule.forRoot(routes)],\r\n\texports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { RetrievePwdService } from \"./retrieve-pwd.service\";\r\nimport { fadeIn } from \"../../../shared/animations/fade-in\";\r\nimport { environment } from \"../../../../environments/environment\";\r\n\r\n@Component({\r\n\tselector: \"retrieve-pwd\",\r\n\ttemplateUrl: \"./retrieve-pwd.component.html\",\r\n\tstyleUrls: [\"./retrieve-pwd.component.scss\"],\r\n\tanimations: [fadeIn]\r\n})\r\nexport class RetrievePwdComponent implements OnInit {\r\n\tpublic isMock=environment.isMock;\r\n\r\n\tpublic user: any = {};\r\n\tpublic message: string;\r\n\tpublic messgeType: string;\r\n\tconstructor(\r\n\t\tpublic retrievePwdService: RetrievePwdService\r\n\t) { }\r\n\r\n\tngOnInit() {\r\n\r\n\t}\r\n\r\n\tpublic sendValidationEmail(): void {\r\n\t\tthis.retrievePwdService.sendValidationEmail(this.user.email)\r\n\t\t\t.subscribe(\r\n\t\t\t\tdata => {\r\n\t\t\t\t\tthis.message = data.message;\r\n\t\t\t\t\tthis.messgeType = \"success\";\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tthis.message = error.messge;\r\n\t\t\t\t\tthis.messgeType = \"danger\";\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t}\r\n\r\n}\r\n","<div class=\"container forget-pwd-container\" [@fadeIn]>\r\n    <div class=\"panel panel-default\">\r\n        <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">找回密码</h3>\r\n        </div>\r\n        <div class=\"panel-body\">\r\n            <form *ngIf=\"!message\" class=\"form-horizontal\" #form=\"ngForm\"\r\n                (ngSubmit)=\"form.form.valid && sendValidationEmail()\" role=\"form\" novalidate>\r\n                <div class=\"form-group\" [ngClass]=\"{'has-error': form.submitted && !email.valid}\">\r\n                    <label class=\"col-md-2 control-label\">邮箱：</label>\r\n                    <div class=\"col-md-10\">\r\n                        <input required pattern=\"^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$\"\r\n                            #email=\"ngModel\" [(ngModel)]=\"user.email\" name=\"email\" type=\"email\" class=\"form-control\"\r\n                            placeholder=\"注册时使用的邮箱\">\r\n                        <div *ngIf=\"form.submitted && !email.valid\" class=\"text-danger\">请输入注册时使用的邮箱。</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-md-offset-2 col-md-10\">\r\n                        <button type=\"button\" class=\"btn btn-primary\" (click)=\"sendValidationEmail()\">发送验证邮件</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            <div *ngIf=\"message\" class=\"alert alert-{{messgeType}}\">{{message}}</div>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\"\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"../../../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class RetrievePwdService {\r\n    public sendEmailURL = environment.dataURL.sendEmailURL;\r\n    \r\n    constructor(public httpClient: HttpClient) {\r\n    }\r\n\r\n    public sendValidationEmail(email: string): Observable<any> {\r\n        return this.httpClient.get(this.sendEmailURL);\r\n    }\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { SignInService } from \"./sign-in.service\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { fadeIn } from \"../../../shared/animations/fade-in\";\r\n\r\n@Component({\r\n  selector: \"sign-in\",\r\n  templateUrl: \"./sign-in.component.html\",\r\n  styleUrls: [\"./sign-in.component.scss\"],\r\n  animations: [fadeIn]\r\n})\r\nexport class SignInComponent implements OnInit {\r\n  public isMock = environment.isMock;\r\n  public error: Error;\r\n  public signInInfo: any = {\r\n    userName: \"\",\r\n    password: \"\",\r\n    captcha: \"\",\r\n    rememberMe: true\r\n  };\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public signInService: SignInService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  public doSignIn(): void {\r\n    console.log(this.signInInfo);\r\n    this.signInService.signIn(this.signInInfo);\r\n  }\r\n\r\n  public doSignOut(): void {\r\n    this.signInService.signOut();\r\n    this.router.navigateByUrl(\"home\");\r\n  }\r\n\r\n  public retrievePwd(): void {\r\n    this.router.navigateByUrl(\"retrievepwd\");\r\n  }\r\n}\r\n","<div class=\"user-login-container\" [@fadeIn]>\r\n    <div class=\"panel panel-default\">\r\n        <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">{{'signIn.signIn' | translate}}</h3>\r\n        </div>\r\n        <div class=\"panel-body\">\r\n            <p class=\"bg-danger\">测试用户: admin@126.com / 12345678</p>\r\n            <form #signInForm=\"ngForm\" (ngSubmit)=\"signInForm.form.valid && doSignIn()\" novalidate\r\n                class=\"form-horizontal\" role=\"form\">\r\n                <div class=\"form-group\" [ngClass]=\"{ 'has-error': signInForm.submitted&&!userName.valid }\">\r\n                    <label class=\"col-md-2 control-label\">邮箱：</label>\r\n                    <div class=\"col-md-10\">\r\n                        <input required name=\"userName\" [(ngModel)]=\"signInInfo.userName\" #userName=\"ngModel\"\r\n                            type=\"text\" class=\"form-control\" placeholder=\"请输入完整邮箱或者手机号\">\r\n                        <div *ngIf=\"signInForm.submitted&&!userName.valid\" class=\"text-danger\">邮箱必须输入</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\" [ngClass]=\"{ 'has-error': signInForm.submitted&&!password.valid }\">\r\n                    <label class=\"col-md-2 control-label\">密码：</label>\r\n                    <div class=\"col-md-10\">\r\n                        <input required minlength=\"8\" [(ngModel)]=\"signInInfo.password\" name=\"password\"\r\n                            #password=\"ngModel\" type=\"password\" class=\"form-control\" placeholder=\"至少8位\">\r\n                        <div *ngIf=\"signInForm.submitted&&!password.valid\" class=\"text-danger\">密码必须输入,至少要8位</div>\r\n                    </div>\r\n                </div>\r\n                <!-- Mock 环境下不显示验证码，也不提交数据。-->\r\n                <div *ngIf=\"!isMock\">\r\n                    <div class=\"form-group\" [ngClass]=\"{ 'has-error': signInForm.submitted&&!captcha.valid }\">\r\n                        <label class=\"col-md-2 control-label\">验证码：</label>\r\n                        <div class=\"col-md-10\">\r\n                            <input required maxlength=\"4\" [(ngModel)]=\"signInInfo.captcha\" name=\"captcha\" type=\"text\"\r\n                                #captcha=\"ngModel\" class=\"form-control\" placeholder=\"至少1位，最多4位\" autocomplete=\"off\">\r\n                            <div *ngIf=\"signInForm.submitted&&!captcha.valid\" class=\"text-danger\">至少1位，最多4位</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"col-md-10 col-md-offset-2\">\r\n                            <captcha></captcha>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\" [ngClass]=\"{ 'has-error': signInForm.submitted&&!rememberMe.valid }\">\r\n                    <label class=\"col-md-2 control-label\">记住我：</label>\r\n                    <div class=\"col-md-10\">\r\n                        <div class=\"checkbox\">\r\n                            <label>\r\n                                <input [(ngModel)]=\"signInInfo.rememberMe\" name=\"rememberMe\" #rememberMe=\"ngModel\"\r\n                                    type=\"checkbox\">\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"error\" class=\"col-md-offset-2 col-md-10 alert alert-danger\">{{error}}</div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-md-offset-2 col-md-10\">\r\n                        <button type=\"submit\" class=\"btn btn-primary btn-margin-1rem\">登录</button>\r\n                        <button type=\"button\" class=\"btn btn-default\" (click)=\"retrievePwd()\">忘记密码？</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\"\r\nimport { MessageService } from \"primeng/api\";\r\nimport { environment } from \"../../../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class SignInService {\r\n  public signInURL = environment.dataURL.signInURL;\r\n  public signOutURL = environment.dataURL.signOutURL;\r\n  public getSessionUserURL = environment.dataURL.getSessionUserURL;\r\n  public subject: Subject<any> = new Subject<any>();\r\n\r\n  constructor(public httpClient: HttpClient,\r\n    private messageService: MessageService) {\r\n  }\r\n\r\n  public get currentUser(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  public signIn(user: any) {\r\n    //TODO:passowrd用MD5加密之后传输，服务端需要做一些对应的处理\r\n    return this.httpClient\r\n      .post(\r\n        this.signInURL,\r\n        //FIXME:fix this ugly code\r\n        `userName=${user.userName}&password=${user.password}&validateCode=${user.captcha}&rememberMe=${user.rememberMe}`,\r\n        {\r\n          headers: new HttpHeaders({\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          })\r\n        }\r\n      )\r\n      .subscribe(\r\n        (response: any) => {\r\n          console.log(response);\r\n          if (response && response.success) {\r\n            let userEntity = response.data;\r\n            console.log(\"signIn success>\");\r\n            console.log(\"user object>\" + userEntity);\r\n            this.messageService.add({\r\n              severity: \"success\",\r\n              summary: \"Success\",\r\n              detail: \"登录成功\",\r\n              life: 3000\r\n            });\r\n            this.subject.next(userEntity);\r\n            window.localStorage.setItem(\"currentUser\", JSON.stringify(userEntity));\r\n          } else {\r\n            this.subject.next(Object.assign({}));\r\n            window.localStorage.removeItem(\"currentUser\");\r\n            this.messageService.add({\r\n              severity: \"error\",\r\n              summary: \"Fail Message\",\r\n              detail: response.msg || \"登录失败\",\r\n              life: 3000\r\n            });\r\n          }\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          this.subject.next(Object.assign({}));\r\n          this.messageService.add({\r\n            severity: \"error\",\r\n            summary: \"Fail Message\",\r\n            detail: error || \"登录失败\",\r\n            life: 3000\r\n          });\r\n          window.localStorage.removeItem(\"currentUser\");\r\n        }\r\n      );\r\n  }\r\n\r\n  public signOut(): void {\r\n    this.httpClient\r\n      .get(this.signOutURL)\r\n      .subscribe(\r\n        (data: any) => {\r\n          this.subject.next(Object.assign({}));\r\n          window.localStorage.removeItem(\"currentUser\");\r\n          this.messageService.add({\r\n            severity: \"success\",\r\n            summary: \"Success Message\",\r\n            detail: \"退出成功\",\r\n            life: 3000\r\n          });\r\n        },\r\n        error => {\r\n          console.error(error);\r\n          this.messageService.add({\r\n            severity: \"error\",\r\n            summary: \"Error Message\",\r\n            detail: \"退出失败\",\r\n            life: 3000\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  public getSessionUser(): void {\r\n    this.httpClient\r\n      .get(this.getSessionUserURL)\r\n      .subscribe(\r\n        (userEntity: any) => {\r\n          console.log(userEntity);\r\n          if (userEntity && userEntity.userId) {\r\n            this.subject.next(userEntity);\r\n            window.localStorage.setItem(\"currentUser\", JSON.stringify(userEntity));\r\n          } else {\r\n            this.subject.next(Object.assign({}));\r\n            window.localStorage.removeItem(\"currentUser\");\r\n          }\r\n        },\r\n        error => {\r\n          console.error(error);\r\n        }\r\n      );\r\n  }\r\n}\r\n","import { Directive, Input } from \"@angular/core\";\r\nimport { Validator, AbstractControl, NG_VALIDATORS } from \"@angular/forms\";\r\n\r\n@Directive({\r\n    selector: \"[validateEqual]\",\r\n    providers: [\r\n        { provide: NG_VALIDATORS, useExisting: EqualValidator, multi: true }\r\n    ]\r\n})\r\nexport class EqualValidator implements Validator {\r\n    @Input() validateEqual: string;\r\n    @Input() reverse: boolean;\r\n    constructor() { }\r\n\r\n    validate(control: AbstractControl): { [key: string]: any } {\r\n        let selfValue = control.value;\r\n        let targetControl = control.root.get(this.validateEqual);\r\n        if (targetControl && selfValue !== targetControl.value) {\r\n            if (!this.reverse) {\r\n                return {\r\n                    validateEqual: false\r\n                }\r\n            } else {\r\n                targetControl.setErrors({\r\n                    validateEqual: false\r\n                })\r\n            }\r\n        } else {\r\n            targetControl.setErrors(null);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { MessageService } from \"primeng/api\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { SignUpService } from \"./sign-up.service\";\r\nimport { fadeIn } from \"../../../shared/animations/fade-in\";\r\nimport { environment } from \"../../../../environments/environment\";\r\n\r\n/**\r\n * 用户注册和后台创建都使用这个组件完成。\r\n */\r\n@Component({\r\n  selector: \"sign-up\",\r\n  templateUrl: \"./sign-up.component.html\",\r\n  styleUrls: [\"./sign-up.component.scss\"],\r\n  animations: [fadeIn]\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  @Input() panelTitle = \"用户注册\";\r\n  @Input() btnLabel = \"注册\";\r\n  @Input() isEdit = false;\r\n  @Output() saveSuccess = new EventEmitter();\r\n\r\n  public isMock = environment.isMock;\r\n  public userForm: FormGroup;\r\n  public userInfo: any = {};\r\n\r\n  public formErrors = {\r\n    \"email\": \"\",\r\n    \"password\": \"\",\r\n    \"confirmPassword\": \"\",\r\n    \"formError\": \"\",\r\n    \"captcha\": \"\",\r\n    \"nickName\": \"\"\r\n  };\r\n  validationMessages = {\r\n    \"email\": {\r\n      \"required\": \"邮箱必须输入。\",\r\n      \"pattern\": \"请输入正确的邮箱地址。\"\r\n    },\r\n    \"nickName\": {\r\n      \"required\": \"昵称必须输入。\",\r\n      \"pattern\": \"请输入正确的昵称。\",\r\n      \"minlength\": \"至少2个字符\"\r\n    },\r\n    \"password\": {\r\n      \"required\": \"密码必须输入。\",\r\n      \"minlength\": \"密码至少要8位。\"\r\n    },\r\n    \"confirmPassword\": {\r\n      \"required\": \"重复密码必须输入。\",\r\n      \"minlength\": \"密码至少要8位。\",\r\n      \"validateEqual\": \"两次输入的密码不一致。\"\r\n    },\r\n    \"captcha\": {\r\n      \"required\": \"必须输入。\",\r\n      \"maxlength\": \"至少1位，最多4位\"\r\n    }\r\n  };\r\n\r\n  constructor(public fb: FormBuilder,\r\n    public signUpService: SignUpService,\r\n    public route: ActivatedRoute,\r\n    public router: Router,\r\n    private messageService: MessageService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm(): void {\r\n    this.userForm = this.fb.group({\r\n      \"email\": [\r\n        this.userInfo.email,\r\n        [\r\n          Validators.required,\r\n          Validators.pattern(\"^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$\")\r\n        ]\r\n      ],\r\n      \"nickName\": [\r\n        this.userInfo.nickName,\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(2),\r\n        ]\r\n      ],\r\n      \"password\": [\r\n        this.userInfo.password,\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(8),\r\n        ]\r\n      ],\r\n      \"confirmPassword\": [\r\n        this.userInfo.confirmPassword,\r\n        [\r\n          Validators.required,\r\n          Validators.minLength(8)\r\n        ]\r\n      ],\r\n      \"captcha\": [\r\n        this.userInfo.captcha,\r\n        [\r\n          Validators.required,\r\n          Validators.maxLength(4),\r\n        ]\r\n      ]\r\n    });\r\n    this.userForm.valueChanges.subscribe(data => this.onValueChanged(data));\r\n    this.onValueChanged();\r\n  }\r\n\r\n  onValueChanged(data?: any) {\r\n    if (!this.userForm) {\r\n      return;\r\n    }\r\n    const form = this.userForm;\r\n    for (const field in this.formErrors) {\r\n      this.formErrors[field] = \"\";\r\n      const control = form.get(field);\r\n      if (control && control.dirty && !control.valid) {\r\n        const messages = this.validationMessages[field];\r\n        for (const key in control.errors) {\r\n          this.formErrors[field] += messages[key] + \" \";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  doSignUp() {\r\n    if (this.userForm.valid) {\r\n      this.userInfo = this.userForm.value;\r\n      console.log(this.userInfo);\r\n      this.signUpService\r\n        .signup(this.userInfo)\r\n        .subscribe(\r\n          (data: any) => {\r\n            if (data && data.success) {\r\n              this.messageService.add({ severity: \"success\", summary: \"注册成功\", detail: \"请登录\" });\r\n              this.saveSuccess.emit(\"saveSuccess\");\r\n              if (!this.isEdit) {\r\n                window.history.back();\r\n              }\r\n            } else {\r\n              this.formErrors.formError = data.msg;\r\n            }\r\n          },\r\n          error => {\r\n            this.formErrors.formError = error.message;\r\n            console.error(error);\r\n          }\r\n        );\r\n    } else {\r\n      this.formErrors.formError = \"存在不合法的输入项，请检查。\";\r\n    }\r\n  }\r\n\r\n  testEmail() {\r\n    let email = this.userForm.get(\"email\").value;\r\n    this.signUpService.testEmail()\r\n      .subscribe(\r\n        data => {\r\n          console.log(data);\r\n        },\r\n        error => {\r\n          console.error(error);\r\n        }\r\n      )\r\n  }\r\n}\r\n","<div class=\"user-register-container\" [@fadeIn]>\r\n    <div class=\"panel panel-default\">\r\n        <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">{{panelTitle}}</h3>\r\n        </div>\r\n        <div class=\"panel-body\">\r\n            <form [formGroup]=\"userForm\" class=\"form-horizontal\" role=\"form\" novalidate>\r\n                <div class=\"form-group\" [ngClass]=\"{'has-error': formErrors.email }\">\r\n                    <label class=\"col-md-3 control-label\">{{'userSignUp.email' | translate}}</label>\r\n                    <div class=\"col-md-9\">\r\n                        <input formControlName=\"email\" type=\"email\" class=\"form-control\"\r\n                            placeholder=\"{{'userSignUp.email-placeholder' | translate}}\">\r\n                        <div *ngIf=\"formErrors.email\" class=\"text-danger\">\r\n                            {{ formErrors.email }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\" [ngClass]=\"{'has-error': formErrors.nickName }\">\r\n                    <label class=\"col-md-3 control-label\">{{'userSignUp.nickName' | translate}}</label>\r\n                    <div class=\"col-md-9\">\r\n                        <input required formControlName=\"nickName\" type=\"nickName\" class=\"form-control\"\r\n                            placeholder=\"{{'userSignUp.nickName-placeholder' | translate}}\">\r\n                        <div *ngIf=\"formErrors.nickName\" class=\"text-danger\">\r\n                            {{ formErrors.nickName }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\" [ngClass]=\"{'has-error': formErrors.password }\">\r\n                    <label class=\"col-md-3 control-label\">{{'userSignUp.password' | translate}}</label>\r\n                    <div class=\"col-md-9\">\r\n                        <input formControlName=\"password\" validateEqual=\"confirmPassword\" reverse=true type=\"password\"\r\n                            class=\"form-control\" placeholder=\"{{'userSignUp.password-placeholder' | translate}}\">\r\n                        <div *ngIf=\"formErrors.password\" class=\"text-danger\">\r\n                            {{ formErrors.password }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\" [ngClass]=\"{'has-error': formErrors.confirmPassword }\">\r\n                    <label class=\"col-md-3 control-label\">{{'userSignUp.repeat-pwd' | translate}}</label>\r\n                    <div class=\"col-md-9\">\r\n                        <input formControlName=\"confirmPassword\" validateEqual=\"password\" type=\"password\"\r\n                            class=\"form-control\" placeholder=\"{{'userSignUp.repeat-pwd-placeholder' | translate}}\">\r\n                        <div *ngIf=\"formErrors.confirmPassword\" class=\"text-danger\">\r\n                            {{ formErrors.confirmPassword }}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- Mock 环境下不显示验证码，也不提交数据。-->\r\n                <div *ngIf=\"!isMock\">\r\n                    <div class=\"form-group\" [ngClass]=\"{ 'has-error': formErrors.captcha }\">\r\n                        <label class=\"col-md-3 control-label\">验证码：</label>\r\n                        <div class=\"col-md-9\">\r\n                            <input required maxlength=\"4\" formControlName=\"captcha\" type=\"text\" class=\"form-control\"\r\n                                placeholder=\"至少1位，最多4位\">\r\n                            <div *ngIf=\"formErrors.captcha\" class=\"text-danger\" autocomplete=\"off\">至少1位，最多4位</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <div class=\"col-md-9 col-md-offset-3\">\r\n                            <captcha></captcha>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div *ngIf=\"formErrors.formError\" class=\"col-md-offset-3 col-md-9 alert alert-danger\">\r\n                    {{ formErrors.formError }}</div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"col-md-offset-3 col-md-9\">\r\n                        <button [disabled]=\"userForm.invalid\" type=\"button\" (click)=\"doSignUp()\"\r\n                            class=\"btn btn-success\">{{btnLabel}}</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable, Subject } from \"rxjs\";\r\nimport { environment } from \"../../../../environments/environment\";\r\n\r\n@Injectable()\r\nexport class SignUpService {\r\n    public signUpURL = environment.dataURL.signUpURL;\r\n    public testEmailURL = environment.dataURL.testEmailURL;\r\n\r\n    public subject: Subject<any> = new Subject<any>();\r\n\r\n    constructor(public httpClient: HttpClient) {\r\n    }\r\n\r\n    public get currentUser(): Observable<any> {\r\n        return this.subject.asObservable();\r\n    }\r\n\r\n    public signup(user) {\r\n        //TODO:user.password用MD5加密后传输\r\n        return this.httpClient.post(\r\n            this.signUpURL,\r\n            {\r\n                userName: user.email,\r\n                nickName: user.nickName,\r\n                password: user.password,\r\n                email: user.email,\r\n                captcha: user.captcha\r\n            },\r\n            {\r\n                headers: new HttpHeaders({\r\n                    \"Content-Type\": \"application/json\"\r\n                })\r\n            }\r\n        );\r\n    }\r\n\r\n    public testEmail(): Observable<any> {\r\n        return this.httpClient.get(this.testEmailURL);\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Output, EventEmitter } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: \"user-info\",\r\n  templateUrl: \"./user-info.component.html\",\r\n  styleUrls: [\"./user-info.component.scss\"]\r\n})\r\nexport class UserInfoComponent implements OnInit {\r\n  @Input()\r\n  public panelTitle: string;\r\n\r\n  @Input()\r\n  public userId: string;\r\n\r\n  @Output()\r\n  public follow = new EventEmitter<string>();\r\n\r\n  public currentUser: any;\r\n  public userInfoURL = \"user/getUserInfo\";\r\n\r\n  constructor(public httpClient: HttpClient) {\r\n    // 构造组件的时候，@Input的属性还没有值\r\n    console.log(this.panelTitle);\r\n  }\r\n\r\n  ngOnInit() {\r\n    // 组件初始化完成之后，panelTitle才会有值\r\n    console.log(this.panelTitle);\r\n  }\r\n\r\n  public loadUserInfo() {\r\n    this.userInfoURL = this.userInfoURL + \"/\" + this.userId;\r\n    return this.httpClient\r\n      .get(this.userInfoURL)\r\n      .subscribe(\r\n        data => {\r\n          console.log(\"用户信息>\" + data);\r\n        },\r\n        error => {\r\n          console.error(error);\r\n        }\r\n      );\r\n  }\r\n\r\n  public followBtnClick() {\r\n    this.follow.emit(\"follow\");\r\n  }\r\n}\r\n","<div class=\"user-info-container\">\r\n    <div class=\"panel panel-default\">\r\n        <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">{{panelTitle}}</h3>\r\n        </div>\r\n        <div class=\"panel-body\">\r\n            <p><a href=\"#\">头像图片</a></p>\r\n            <p><a href=\"#\">{{currentUser?.userName}}</a></p>\r\n            <p>相看两不厌，唯有敬亭山。</p>\r\n            <p>文章：500</p>\r\n            <p>评论：10</p>\r\n        </div>\r\n        <div class=\"panel-footer\">\r\n            <button class=\"btn btn-primary\" (click)=\"followBtnClick()\">关注</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, Input } from \"@angular/core\";\r\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { MessageService } from \"primeng/api\";\r\nimport { UserMngService } from \"src/app/manage/permission/user-mng.service\";\r\n\r\n@Component({\r\n  selector: \"user-profile\",\r\n  templateUrl: \"./user-profile.component.html\",\r\n  styleUrls: [\"./user-profile.component.scss\"],\r\n})\r\n/**\r\n * 用户个人信息页面。\r\n * 动态表单，详细 API 和说明参见：@see https://angular.io/guide/reactive-forms\r\n * @author 大漠穷秋\r\n */\r\nexport class UserProfileComponent implements OnInit {\r\n  private userId: string = \"-1\";\r\n  public formGroup: FormGroup;\r\n  public genderList: any = [\r\n    { label: '女', value: 0 },//value 必须是数值，与服务端的接口类型对应，否则无法选中。\r\n    { label: '男', value: 1 },\r\n    { label: '未知', value: 2 }\r\n  ];\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public activeRoute: ActivatedRoute,\r\n    public userMngService: UserMngService,\r\n    public messageService: MessageService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.formGroup = this.buildFormGroup();\r\n\r\n    this.activeRoute.params.subscribe((params) => {\r\n      this.userId = params[\"userId\"];\r\n      this.getUserDetails();\r\n    });\r\n  }\r\n\r\n  buildFormGroup() {\r\n    let fields: any[] = [\r\n      {\r\n        key: \"currentAvatarURL\", //必须要有 key 属性，否则取不到数据。\r\n        src: \"assets/imgs/angular2-small.png\",\r\n      },\r\n      {\r\n        key: \"avatarURL\",\r\n      },\r\n      {\r\n        key: \"userName\",\r\n        validators: [\r\n          Validators.required,\r\n          Validators.minLength(2),\r\n          Validators.maxLength(32),\r\n        ],\r\n      },\r\n      {\r\n        key: \"nickName\",\r\n        validators: [Validators.minLength(2), Validators.maxLength(32)],\r\n      },\r\n      {\r\n        key: \"email\",\r\n        validators: [\r\n          Validators.required,\r\n          Validators.pattern(\r\n            \"^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((.[a-zA-Z0-9_-]{2,3}){1,2})$\"\r\n          ),\r\n        ],\r\n      },\r\n      {\r\n        key: \"cellphone\",\r\n        validators: [Validators.pattern(\"^[0-9]*$\")],\r\n      },\r\n      {\r\n        key: \"gender\",\r\n        value: 2,\r\n        validators: [],\r\n      },\r\n      {\r\n        key: \"password\",\r\n        validators: [],\r\n      },\r\n      {\r\n        key: \"confirmPassword\",\r\n        validators: [],\r\n      },\r\n      {\r\n        key: \"status\",\r\n        value: true,\r\n        validators: [],\r\n      },\r\n      {\r\n        rows: 5,\r\n        key: \"remark\",\r\n        validators: [Validators.maxLength(200)],\r\n      },\r\n    ];\r\n\r\n    let group: any = {};\r\n\r\n    fields.forEach((field) => {\r\n      group[field.key] = new FormControl(field.value || \"\", {\r\n        validators: Validators.compose(field.validators), //compose，组合验证器\r\n      });\r\n    });\r\n\r\n    return new FormGroup(group, {\r\n      //自己提供验证函数，验证两次密码是否一致\r\n      validators: (fg: FormGroup) => {\r\n        const password = fg.get(\"password\");\r\n        const confirmPassword = fg.get(\"confirmPassword\");\r\n        const minLength = 8;\r\n        const maxLength = 32;\r\n\r\n        if (password.value.length < minLength || password.value.length > maxLength) {\r\n          password.setErrors({ minlength: true });\r\n          return null;\r\n        }\r\n        if (confirmPassword.value.length < minLength || confirmPassword.value.length > maxLength) {\r\n          confirmPassword.setErrors({ minlength: true });\r\n          return null;\r\n        }\r\n\r\n        if (password.value !== confirmPassword.value) {\r\n          password.setErrors({ passwordNotMatch: true });\r\n          confirmPassword.setErrors({ passwordNotMatch: true });\r\n        } else {\r\n          password.setErrors(null);\r\n          confirmPassword.setErrors(null);\r\n        }\r\n        return null;\r\n      },\r\n    });\r\n  }\r\n\r\n  public getUserDetails() {\r\n    //创建新用户\r\n    if (this.userId == \"-1\") {\r\n      this.formGroup.patchValue({\r\n        currentAvatarURL: \"\",\r\n        userName: \"\",\r\n        nickName: \"\",\r\n        email: \"\",\r\n        cellphone: \"\",\r\n        gender: 2,\r\n        status: 1,\r\n        remark: \"\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    //编辑已经存在的用户\r\n    this.userMngService.getUserDetails(this.userId).subscribe((response) => {\r\n      let userDetail = response.data;\r\n      this.formGroup.patchValue({\r\n        currentAvatarURL: userDetail.avatarURL,\r\n        userName: userDetail.userName,\r\n        nickName: userDetail.nickName,\r\n        email: userDetail.email,\r\n        cellphone: userDetail.cellphone,\r\n        gender: userDetail.gender,\r\n        status: userDetail.status === 1 ? true : false,\r\n        remark: userDetail.remark,\r\n      });\r\n    });\r\n  }\r\n\r\n  //TODO:user.password用MD5加密后传输\r\n  public save(): void {\r\n    this.formGroup.updateValueAndValidity();\r\n    console.log(this.formGroup.getRawValue());\r\n    console.log(this.formGroup.value);\r\n\r\n    if (!this.formGroup.valid) {\r\n      this.messageService.add({\r\n        severity: \"error\",\r\n        summary: \"Error\",\r\n        detail: \"表单验证失败，请检查输入项\",\r\n        sticky: false,\r\n      });\r\n      return;\r\n    }\r\n\r\n    let userInfo = this.formGroup.value;\r\n    delete userInfo.confirmPassword;\r\n    delete userInfo.currentAvatarURL;\r\n    userInfo.status = userInfo.status ? 1 : 0;//数据库中status字段为int类型，0表示禁用，1表示启用。\r\n\r\n    if (this.userId !== \"-1\") {\r\n      userInfo.userId = this.userId;\r\n      this.userMngService.updateUser(userInfo).subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n          if (response.success) {\r\n            window.history.back();\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    } else {\r\n      this.userMngService.newUser(userInfo).subscribe(\r\n        (response) => {\r\n          console.log(response);\r\n          if (response.success) {\r\n            window.history.back();\r\n          } else {\r\n            this.messageService.add({\r\n              severity: \"error\",\r\n              summary: \"Error\",\r\n              detail: response.msg,\r\n              sticky: true\r\n            });\r\n          }\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  public cancel(): void {\r\n    window.history.back();\r\n  }\r\n}\r\n","<div class=\"user-profile-container\">\r\n  <div class=\"panel panel-default\">\r\n    <div class=\"panel-heading\">创建/编辑用户</div>\r\n    <div class=\"panel-body\">\r\n      <form class=\"form-horizontal\" role=\"form\" [formGroup]=\"formGroup\">\r\n        <div class=\"form-group\">\r\n          <label class=\"col-md-2 control-label\">当前头像：</label>\r\n          <div class=\"col-md-10\">\r\n            <img src=\"assets/imgs/angular2-small.png\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [ngClass]=\"{ 'has-error': formGroup.get('avatarURL').invalid }\">\r\n          <label class=\"col-md-2 control-label\">上传头像：</label>\r\n          <div class=\"col-md-10\">\r\n            <input class=\"form-control\" type=\"file\" placeholder=\"上传头像\" formControlName=\"avatarURL\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [ngClass]=\"{ 'has-error': formGroup.get('userName').invalid }\">\r\n          <label class=\"col-md-2 control-label\">用户名：</label>\r\n          <div class=\"col-md-10\">\r\n            <input class=\"form-control\" required=\"required\" type=\"input\" placeholder=\"用户名\" formControlName=\"userName\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [ngClass]=\"{ 'has-error': formGroup.get('nickName').invalid }\">\r\n          <label class=\"col-md-2 control-label\">昵称：</label>\r\n          <div class=\"col-md-10\">\r\n            <input class=\"form-control\" type=\"input\" placeholder=\"昵称\" formControlName=\"nickName\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [ngClass]=\"{ 'has-error': formGroup.get('gender').invalid }\">\r\n          <label class=\"col-md-2 control-label\">性别：</label>\r\n          <div class=\"col-md-10\">\r\n            <ng-container *ngFor=\"let g of genderList; let i = index\">\r\n              <label class=\"radio-inline\">\r\n                <input type=\"radio\" name=\"gender\" [value]=\"g.value\" formControlName=\"gender\"> {{g.label}}\r\n              </label>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [ngClass]=\"{ 'has-error': formGroup.get('email').invalid }\">\r\n          <label class=\"col-md-2 control-label\">常用邮箱：</label>\r\n          <div class=\"col-md-10\">\r\n            <input class=\"form-control\" type=\"input\" placeholder=\"常用邮箱\" formControlName=\"email\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [ngClass]=\"{ 'has-error': formGroup.get('cellphone').invalid }\">\r\n          <label class=\"col-md-2 control-label\">手机号：</label>\r\n          <div class=\"col-md-10\">\r\n            <input class=\"form-control\" type=\"input\" placeholder=\"手机号\" formControlName=\"cellphone\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [ngClass]=\"{ 'has-error': formGroup.get('password').invalid }\">\r\n          <label class=\"col-md-2 control-label\">密码：</label>\r\n          <div class=\"col-md-10\">\r\n            <input class=\"form-control\" type=\"password\" placeholder=\"密码\" formControlName=\"password\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [ngClass]=\"{ 'has-error': formGroup.get('confirmPassword').invalid }\">\r\n          <label class=\"col-md-2 control-label\">重复密码：</label>\r\n          <div class=\"col-md-10\">\r\n            <input class=\"form-control\" type=\"password\" placeholder=\"重复密码\" formControlName=\"confirmPassword\" />\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [ngClass]=\"{ 'has-error': formGroup.get('status').invalid }\">\r\n          <label class=\"col-md-2 control-label\">启用：</label>\r\n          <div class=\"col-md-10\">\r\n            <div class=\"checkbox\">\r\n              <label>\r\n                <input name=\"status\" type=\"checkbox\" formControlName=\"status\" checked />\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\" [ngClass]=\"{ 'has-error': formGroup.get('remark').invalid }\">\r\n          <label class=\"col-md-2 control-label\">简介：</label>\r\n          <div class=\"col-md-10\">\r\n            <textarea name=\"remark\" rows=\"5\" class=\"form-control\" formControlName=\"remark\" placeholder=\"简介\"></textarea>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <form class=\"form-horizontal\" role=\"form\">\r\n    <div class=\"form-group\">\r\n      <div class=\"col-md-12\">\r\n        <button type=\"button\" class=\"btn btn-primary btn-margin-1rem\" (click)=\"save()\">\r\n          保存\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">\r\n          取消\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>","export * from \"./app.component\";\r\nexport * from \"./app.module\";\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport * as _ from 'lodash';\r\n\r\n@Injectable()\r\nexport class UserMngService {\r\n    private userListURL = environment.dataURL.userListURL;\r\n    private delUserURL = environment.dataURL.delUserURL;\r\n    private userDetailURL = environment.dataURL.userDetailURL;\r\n    private signUpURL = environment.dataURL.signUpURL;\r\n    private updateUserURL = environment.dataURL.updateUserURL;\r\n    private userMenuListURL = environment.dataURL.userMenuListURL;\r\n\r\n    constructor(public httpClient: HttpClient) { }\r\n\r\n    public getUserTable(page = 1, searchStr = \"\"): Observable<any> {\r\n        let reqURL = _.template(this.userListURL)({ page: page });\r\n        return this.httpClient.post(reqURL, { userName: searchStr });\r\n    }\r\n\r\n    public del(id): Observable<any> {\r\n        let reqURL = _.template(this.delUserURL)({ id: id });\r\n        return this.httpClient.delete(reqURL);\r\n    }\r\n\r\n    public getUserDetails(userId): Observable<any> {\r\n        let reqURL = _.template(this.userDetailURL)({ id: userId });\r\n        return this.httpClient.get(reqURL);\r\n    }\r\n\r\n    public newUser(user): Observable<any> {\r\n        return this.httpClient.post(this.signUpURL, user);\r\n    }\r\n\r\n    public updateUser(user): Observable<any> {\r\n        return this.httpClient.post(this.updateUserURL, user);\r\n    }\r\n\r\n    /**\r\n     * 根据 userId 加载此用户的菜单\r\n     * @param userId \r\n     * @returns \r\n     */\r\n    public getMenuByUser(userId): Observable<any> {\r\n        let reqURL = _.template(this.userMenuListURL)({ id: userId });\r\n        return this.httpClient.get(reqURL);\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse, HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Observable, throwError } from \"rxjs\";\r\nimport { filter, map, catchError } from \"rxjs/operators\";\r\nimport { BlockService } from \"./block-spinner/block-service.service\";\r\nimport { MessageService } from \"primeng/api\";\r\nimport { environment } from \"../../environments/environment\";\r\n\r\n/**\r\n * Http 请求拦截器，进行一些全局通用的处理。\r\n * @author 大漠穷秋\r\n */\r\n@Injectable()\r\nexport class NiceFishHttpInterceptor implements HttpInterceptor {\r\n    constructor(\r\n        private blockService: BlockService,\r\n        public messageService: MessageService,\r\n    ) { }\r\n\r\n    intercept(httpRequest: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        this.blockService.block();\r\n\r\n        /**\r\n         * 在前后端分离的开发模式下，开发状态一般使用 mock 数据。\r\n         * 由于 dev server 只能接受 GET 型请求，所以根据 eviroment.isMock 判断是否使用 mock 数据，\r\n         * 如果是，直接替换成 GET 型请求。\r\n         */\r\n        if (environment.isMock) {\r\n            this.messageService.add({\r\n                severity: \"warn\",\r\n                summary: \"Warn\",\r\n                detail: \"注意：当前为 Mock 模式，不会与服务端交互，某些请求会报错。所有输入项都可以随意输入，符合校验规则即可。如果需要与服务端交互，请重新启动到 backend 模式 ng serve --configuration development-backend\",\r\n                sticky: false,\r\n                life: 10000\r\n            });\r\n\r\n            if (httpRequest.method !== \"GET\") {\r\n                httpRequest = httpRequest.clone({\r\n                    method: \"GET\",\r\n                    url: httpRequest.url,\r\n                });\r\n            }\r\n        }\r\n\r\n        return next.handle(httpRequest).pipe(\r\n            filter(event => event instanceof HttpResponse),\r\n            map((event: HttpResponse<any>) => {\r\n                this.blockService.unblock();\r\n                return event.clone();\r\n            }),\r\n            catchError((error: HttpErrorResponse) => {\r\n                let errorMsg = '';\r\n                if (error.error instanceof ErrorEvent) {\r\n                    errorMsg = `Error: ${error.error.message}`;\r\n                } else {\r\n                    errorMsg = `Error Code: ${error.status},  Message: ${error.message}`;\r\n                }\r\n                console.error(errorMsg);\r\n                this.blockService.unblock();\r\n                this.messageService.add({\r\n                    severity: \"error\",\r\n                    summary: \"HTTP ERROR\",\r\n                    detail: errorMsg,\r\n                    sticky: false,\r\n                    life: 5000\r\n                });\r\n                return throwError(errorMsg);\r\n            })\r\n        );\r\n    }\r\n}","import { trigger, style, transition, animate } from \"@angular/animations\";\r\n\r\nexport const fadeIn = trigger(\"fadeIn\", [\r\n  transition(\"void => *\", [\r\n    style({ opacity: 0 }),\r\n    animate(600, style({ opacity: 1 }))\r\n  ]),\r\n  transition(\"* => void\", [\r\n    animate(600, style({ opacity: 0 }))\r\n  ])\r\n]);\r\n","import { Injectable } from \"@angular/core\";\r\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\tconstructor(\r\n\t\tprivate router: Router) {\r\n\t}\r\n\r\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\t\tif (window.localStorage.getItem(\"currentUser\")) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tthis.router.navigateByUrl(\"login\");\r\n\t\treturn false;\r\n\t}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Observable, Subject } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class BlockService {\r\n  public subject: Subject<any> = new Subject<any>();\r\n\r\n  constructor() {}\r\n\r\n  public get currentBlockStatus(): Observable<any> {\r\n    return this.subject.asObservable();\r\n  }\r\n\r\n  public block() {\r\n    this.subject.next({ block: true });\r\n  }\r\n\r\n  public unblock() {\r\n    this.subject.next({ block: false});\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { Panel } from \"primeng/panel\";\r\nimport { BlockService } from './block-service.service';\r\n\r\n@Component({\r\n  selector: 'block-spinner',\r\n  templateUrl: './block-spinner.component.html',\r\n  styleUrls: ['./block-spinner.component.scss']\r\n})\r\nexport class BlockSpinnerComponent {\r\n  public blockedPanel: boolean = false;\r\n  public blockTarget:any=null;\r\n  public blocked=false;\r\n\r\n  constructor(\r\n    private blockService : BlockService\r\n  ){\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.blockService.currentBlockStatus.subscribe(\r\n      data => {\r\n        this.blocked=data.block;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <p-blockUI [blocked]=\"blocked\">\r\n    <p-progressSpinner\r\n      styleClass=\"w-4rem h-4rem\"\r\n      strokeWidth=\"4\"\r\n      fill=\"var(--surface-ground)\"\r\n      animationDuration=\".5s\"\r\n    ></p-progressSpinner>\r\n  </p-blockUI>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { environment } from \"../../../environments/environment\";\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'captcha',\r\n  templateUrl: './captcha.component.html',\r\n  styleUrls: ['./captcha.component.scss']\r\n})\r\nexport class CaptchaComponent {\r\n  public capchaURL = environment.dataURL.capchaURL;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.refreshCaptchaURL();\r\n  }\r\n\r\n  public refreshCaptchaURL(): string {\r\n    this.capchaURL = `${this.capchaURL}&kill_cache=${new Date().getTime()}`;\r\n    return this.capchaURL;\r\n  }\r\n}\r\n","<img src={{capchaURL}} (click)=\"refreshCaptchaURL()\" style=\"cursor: pointer;width: 160px; height: 60px;\" />","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n\tname: \"boolean\"\r\n})\r\n\r\nexport class BooleanPipe implements PipeTransform {\r\n\tconstructor() { }\r\n\r\n\ttransform(flag: string): string {\r\n\t\treturn flag === \"true\" ? \"text-danger\" : \"\";\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n\tname: \"rightPad\"\r\n})\r\n\r\n/**\r\n * 在字符串的右侧加三个点省略号\r\n */\r\nexport class RightPadStringPipe implements PipeTransform {\r\n\tconstructor() { }\r\n\r\n\ttransform(source = \"\"): string {\r\n\t\tsource = source ? source : \"\";\r\n\t\tsource += \"...\";\r\n\t\treturn source;\r\n\t}\r\n}\r\n","import { Pipe, PipeTransform, SecurityContext } from \"@angular/core\";\r\nimport { DomSanitizer } from \"@angular/platform-browser\";\r\n\r\n@Pipe({\r\n    name: \"sanitizeHtml\"\r\n})\r\nexport class SanitizeHtmlPipe implements PipeTransform {\r\n    constructor(private sanitizer: DomSanitizer) { }\r\n    \r\n    transform(value: any): any {\r\n        return this.sanitizer.bypassSecurityTrustHtml(value);\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n\tname: \"trim\"\r\n})\r\n\r\nexport class TrimStringPipe implements PipeTransform {\r\n\tconstructor() { }\r\n\r\n\ttransform(source = \"\"): string {\r\n\t\tsource = source ? source : \"\";\r\n\t\treturn source.replace(/\\s+/g, \"\");\r\n\t}\r\n}\r\n","import { NgModule } from \"@angular/core\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { TranslateModule } from \"@ngx-translate/core\";\r\nimport { PickListModule } from \"primeng/picklist\";\r\nimport { BlockUIModule } from \"primeng/blockui\";\r\nimport { ProgressSpinnerModule } from \"primeng/progressspinner\";\r\nimport { PanelModule } from \"primeng/panel\";\r\nimport { TreeTableModule } from \"primeng/treetable\";\r\nimport { ButtonModule } from \"primeng/button\";\r\nimport { MultiSelectModule } from \"primeng/multiselect\";\r\nimport { SignInComponent } from \"../blog/user/sign-in/sign-in.component\";\r\nimport { UserInfoComponent } from \"../blog/user/user-info/user-info.component\";\r\nimport { UserProfileComponent } from \"../blog/user/user-profile/user-profile.component\";\r\nimport { BlockSpinnerComponent } from \"./block-spinner/block-spinner.component\";\r\nimport { CaptchaComponent } from \"./captcha/captcha.component\";\r\n\r\nimport { TrimStringPipe } from \"./pipes/trim-string.pipe\";\r\nimport { SanitizeHtmlPipe } from \"./pipes/sanitize-html-pipe\";\r\nimport { RightPadStringPipe } from \"./pipes/right-pad-string.pipe\";\r\nimport { BooleanPipe } from \"./pipes/boolean-pipe\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    TranslateModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    PickListModule,\r\n    ReactiveFormsModule,\r\n    BlockUIModule,\r\n    ProgressSpinnerModule,\r\n    PanelModule,\r\n    TreeTableModule,\r\n    ButtonModule,\r\n    MultiSelectModule,\r\n  ],\r\n  declarations: [\r\n    SignInComponent,\r\n    UserInfoComponent,\r\n    UserProfileComponent,\r\n    BlockSpinnerComponent,\r\n    CaptchaComponent,\r\n    TrimStringPipe,\r\n    SanitizeHtmlPipe,\r\n    RightPadStringPipe,\r\n    BooleanPipe,\r\n  ],\r\n  exports: [\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    PickListModule,\r\n    SignInComponent,\r\n    BlockUIModule,\r\n    ProgressSpinnerModule,\r\n    PanelModule,\r\n    TreeTableModule,\r\n    ButtonModule,\r\n    MultiSelectModule,\r\n    UserInfoComponent,\r\n    UserProfileComponent,\r\n    BlockSpinnerComponent,\r\n    CaptchaComponent,\r\n    TrimStringPipe,\r\n    SanitizeHtmlPipe,\r\n    RightPadStringPipe,\r\n    BooleanPipe,\r\n  ],\r\n})\r\nexport class SharedModule { }\r\n","/**\r\n * 静态的 Mock 数据，方便开发的时候使用。\r\n * 关于此配置项的功能细节，请参考 base-url-config.ts 中的注释。\r\n */\r\nexport const dataURL = {\r\n    postListURL: \"mock-data/post-list-mock.json\",\r\n    postDetailURL: \"mock-data/post-detail-mock.json\",\r\n    postTableURL: \"mock-data/post-table-mock.json\",\r\n    delPostURL: \"\",\r\n    capchaURL: \"\",\r\n    signInURL: \"mock-data/user-login-mock.json\",\r\n    signOutURL: \"mock-data/user-login-mock.json\",\r\n    getSessionUserURL: \"\",\r\n    testEmailURL: \"\",\r\n    signUpURL: \"mock-data/user-register-mock.json\",\r\n    commentListURL: \"mock-data/comment-list-mock.json\",\r\n    delCommentURL: \"\",\r\n    userListURL: \"mock-data/user-list-mock.json\",\r\n    userDetailURL: \"mock-data/user-detail-mock.json\",\r\n    updateUserURL: \"mock-data/user-register-mock.json\",\r\n    delUserURL: \"\",\r\n    userMenuListURL: \"mock-data/user-menu-list-mock.json\",  //用户对应的菜单\r\n    roleTableURL: \"mock-data/role-list-mock.json\",\r\n    roleListByUserIdURL: \"mock-data/role-list-mock.json\",\r\n    updateUserRoleRelationURL: \"\",\r\n    roleDetailURL: \"mock-data/role-detail-mock.json\",\r\n    delRoleURL: \"\",\r\n    newRoleURL: \"\",\r\n    updateRoleURL: \"\",\r\n    apiPermissionTableURL: \"mock-data/api-permission-list-mock.json\",\r\n    apiPermissionListAll: \"mock-data/api-permission-list-all-mock.json\",\r\n    apiPermissionListAllByRole: \"mock-data/api-permission-list-by-role-mock.json\",\r\n    apiPermissionDetailURL: \"mock-data/api-permission-detail-mock.json\",\r\n    delApiPermissionURL: \"\",\r\n    newApiPermissionURL: \"\",\r\n    updateApiPermissionURL: \"\",\r\n    apiRoleListURL: \"mock-data/api-role-list-mock.json\",\r\n    compPermListURL: \"mock-data/component-permission-list.json\",\r\n    compPermissionListAllByRole: \"mock-data/component-permission-list-by-role-mock.json\",\r\n    compPermDetailURL: \"mock-data/component-permission-detail-mock.json\",\r\n    delCompPermURL: \"\",\r\n    newCompPermURL: \"\",\r\n    updateCompPermURL: \"\",\r\n    compRoleListURL: \"\",\r\n    sendEmailURL: \"mock-data/forget-pwd-mock.json\",\r\n    getSysParamsURL: \"mock-data/sys-params-mock.json\",\r\n    commentListByPostIdURL: \"mock-data/comment-list-mock.json\",\r\n    writeCommentURL: \"\",\r\n};","//@see https://angular.io/guide/workspace-config#alternate-build-configurations\r\nimport {dataURL} from \"./data-url-config/mock-data-url\";\r\n\r\n//从 mock 文件加载数据，使用 mock 数据时，只有 get 型的请求可以正常返回假数据，其它所有请求都无效。\r\nexport const environment = {\r\n    production: false,\r\n    isMock:true,\r\n    dataURL:dataURL\r\n};\r\n","import { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\nimport { enableProdMode } from \"@angular/core\";\r\nimport { environment } from \"./environments/environment\";\r\nimport { AppModule } from \"./app/\";\r\n\r\nconsole.log(\"Production mode: \",environment.production);\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n"],"names":["ElementRef","Renderer2","ActivatedRoute","Router","TranslateService","SignInService","SignUpService","merge","MessageService","i0","ɵɵelementStart","ɵɵlistener","AppComponent_ng_template_5_Template_button_click_0_listener","ɵɵrestoreView","_r5","ɵɵnextContext","_r0","ɵɵreference","ɵɵresetView","accept","ɵɵelementEnd","AppComponent_ng_template_5_Template_button_click_1_listener","reject","AppComponent_ul_26_Template_ul_click_0_listener","_r8","ctx_r7","onMenuToggle","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","AppComponent_ul_27_Template_ul_click_0_listener","_r10","ctx_r9","AppComponent_ul_27_Template_a_click_11_listener","ctx_r11","doLogout","AppComponent","constructor","elementRef","renderer","router","activatedRoute","translate","signInService","signUpService","messageService","_defineProperty","ngOnInit","globalClickCallbackFn","listen","nativeElement","event","console","log","currentUser","JSON","parse","localStorage","getItem","subscribe","data","activatedRouteSnapshot","snapshot","routerState","routerStateSnapshot","url","indexOf","navigateByUrl","error","addLangs","setDefaultLang","browserLang","getBrowserLang","use","match","ngOnDestroy","showToggleMenu","signOut","ɵɵdirectiveInject","i1","i2","i3","i4","i5","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵtemplate","AppComponent_ng_template_5_Template","AppComponent_Template_button_click_8_listener","ɵɵtext","AppComponent_Template_ul_click_17_listener","AppComponent_ul_26_Template","AppComponent_ul_27_Template","ɵɵstyleMap","_c1","ɵɵpureFunction1","_c2","ɵɵtextInterpolate","ɵɵpipeBind1","userName","BrowserModule","BrowserAnimationsModule","RouterModule","HttpClientModule","HttpClient","HTTP_INTERCEPTORS","TranslateModule","TranslateLoader","TranslateHttpLoader","TranslateStore","ToastModule","ConfirmDialogModule","SharedModule","RetrievePwdComponent","SignUpComponent","RetrievePwdService","EqualValidator","AppRoutingModule","ConfirmationService","AuthGuard","BlockService","NiceFishHttpInterceptor","createTranslateLoader","http","AppModule","bootstrap","provide","useClass","multi","imports","withServerTransition","appId","forRoot","defaultLanguage","loader","useFactory","deps","declarations","SignInComponent","routes","path","redirectTo","pathMatch","loadChildren","then","m","HomeModule","PostModule","component","UserModule","ManageModule","exports","fadeIn","environment","RetrievePwdComponent_form_6_Template_form_ngSubmit_0_listener","_r6","_r2","ctx_r5","form","valid","sendValidationEmail","RetrievePwdComponent_form_6_Template_input_ngModelChange_6_listener","$event","user","email","RetrievePwdComponent_form_6_div_8_Template","RetrievePwdComponent_form_6_Template_button_click_11_listener","ctx_r8","submitted","_r3","ctx_r0","ɵɵclassMapInterpolate1","ctx_r1","messgeType","message","retrievePwdService","isMock","messge","RetrievePwdComponent_Template","RetrievePwdComponent_form_6_Template","RetrievePwdComponent_div_7_Template","undefined","httpClient","dataURL","sendEmailURL","get","ɵɵinject","factory","ɵfac","SignInComponent_div_25_Template_input_ngModelChange_5_listener","_r11","ctx_r10","signInInfo","captcha","SignInComponent_div_25_div_7_Template","password","rememberMe","doSignIn","signIn","doSignOut","retrievePwd","SignInComponent_Template","SignInComponent_Template_form_ngSubmit_9_listener","_r12","SignInComponent_Template_input_ngModelChange_15_listener","SignInComponent_div_17_Template","SignInComponent_Template_input_ngModelChange_22_listener","SignInComponent_div_24_Template","SignInComponent_div_25_Template","SignInComponent_Template_input_ngModelChange_32_listener","SignInComponent_div_34_Template","SignInComponent_Template_button_click_39_listener","_r1","Subject","HttpHeaders","signInURL","signOutURL","getSessionUserURL","subject","asObservable","post","headers","response","success","userEntity","add","severity","summary","detail","life","next","window","setItem","stringify","Object","assign","removeItem","msg","getSessionUser","userId","AbstractControl","NG_VALIDATORS","validate","control","selfValue","value","targetControl","root","validateEqual","reverse","setErrors","inputs","features","ɵɵProvidersFeature","useExisting","EventEmitter","FormBuilder","Validators","ɵɵtextInterpolate1","formErrors","nickName","ctx_r2","ctx_r3","confirmPassword","SignUpComponent_div_39_div_6_Template","ctx_r4","formError","fb","route","buildForm","userForm","group","userInfo","required","pattern","minLength","maxLength","valueChanges","onValueChanged","field","dirty","messages","validationMessages","key","errors","doSignUp","signup","saveSuccess","emit","isEdit","history","back","testEmail","panelTitle","btnLabel","outputs","SignUpComponent_Template","SignUpComponent_div_14_Template","SignUpComponent_div_22_Template","SignUpComponent_div_30_Template","SignUpComponent_div_38_Template","SignUpComponent_div_39_Template","SignUpComponent_div_40_Template","SignUpComponent_Template_button_click_43_listener","ɵɵpropertyInterpolate","invalid","signUpURL","testEmailURL","UserInfoComponent","loadUserInfo","userInfoURL","followBtnClick","follow","UserInfoComponent_Template","UserInfoComponent_Template_button_click_19_listener","FormControl","FormGroup","UserMngService","ɵɵelementContainerStart","ɵɵelementContainerEnd","g_r1","label","UserProfileComponent","activeRoute","userMngService","formGroup","buildFormGroup","params","getUserDetails","fields","src","validators","rows","forEach","compose","fg","length","minlength","passwordNotMatch","patchValue","currentAvatarURL","cellphone","gender","status","remark","userDetail","avatarURL","save","updateValueAndValidity","getRawValue","sticky","updateUser","newUser","cancel","UserProfileComponent_Template","UserProfileComponent_ng_container_30_Template","UserProfileComponent_Template_button_click_66_listener","UserProfileComponent_Template_button_click_68_listener","genderList","_","userListURL","delUserURL","userDetailURL","updateUserURL","userMenuListURL","getUserTable","page","searchStr","reqURL","del","id","delete","getMenuByUser","HttpEvent","HttpHandler","HttpRequest","HttpResponse","HttpErrorResponse","throwError","filter","map","catchError","blockService","intercept","httpRequest","block","method","clone","handle","pipe","unblock","errorMsg","ErrorEvent","trigger","style","transition","animate","opacity","ActivatedRouteSnapshot","RouterStateSnapshot","canActivate","state","currentBlockStatus","providedIn","BlockSpinnerComponent","blocked","BlockSpinnerComponent_Template","CaptchaComponent","capchaURL","refreshCaptchaURL","Date","getTime","CaptchaComponent_Template","CaptchaComponent_Template_img_click_0_listener","ɵɵsanitizeUrl","BooleanPipe","transform","flag","pure","RightPadStringPipe","source","DomSanitizer","SanitizeHtmlPipe","sanitizer","bypassSecurityTrustHtml","TrimStringPipe","replace","CommonModule","FormsModule","ReactiveFormsModule","PickListModule","BlockUIModule","ProgressSpinnerModule","PanelModule","TreeTableModule","ButtonModule","MultiSelectModule","postListURL","postDetailURL","postTableURL","delPostURL","commentListURL","delCommentURL","roleTableURL","roleListByUserIdURL","updateUserRoleRelationURL","roleDetailURL","delRoleURL","newRoleURL","updateRoleURL","apiPermissionTableURL","apiPermissionListAll","apiPermissionListAllByRole","apiPermissionDetailURL","delApiPermissionURL","newApiPermissionURL","updateApiPermissionURL","apiRoleListURL","compPermListURL","compPermissionListAllByRole","compPermDetailURL","delCompPermURL","newCompPermURL","updateCompPermURL","compRoleListURL","getSysParamsURL","commentListByPostIdURL","writeCommentURL","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}